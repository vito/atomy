use("core")
use("define")
use("array")

-- TODO: HACK: this gives us pairs-from
use("control-flow")

require("actor")

Actor <- v := send(v)

macro(receive ~(body: Block)):
  names [e]:
    bs =
      `(~e when('~pat to-pattern) [~pat]: ~exp)
        for([pat, exp]) in(pairs-from(body contents))

    `(Actor receive [~e]: ~*bs)

macro(receive ~(body: Block) after(~timeout) ~(action: Block)):
  names [e]:
    bs =
      `(~e when('~pat to-pattern) [~pat]: ~exp)
        for([pat, exp]) in(pairs-from(body contents)) +
          [`(~e after(~timeout) ~action)]

    `(Actor receive [~e]: ~*bs)


export

me := Actor current

spawn &action := Actor spawn &action

spawn-link &action := Actor spawn-link &action
